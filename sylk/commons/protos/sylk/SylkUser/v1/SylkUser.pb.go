// sylk.build Generated proto DO NOT EDIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.1
// source: sylk/SylkUser/v1/SylkUser.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [sylk.SylkUser.v1.SylkUserStatuses] - None
type SylkUserStatuses int32

const (
	// [sylk.SylkUser.v1.SylkUserStatuses] - Default enum value for "sylk.SylkUser.v1.SylkUserStatuses"
	SylkUserStatuses_DEFAULT_SYLKUSERSTATUSES SylkUserStatuses = 0
	// [sylk.SylkUser.v1.SylkUserStatuses] - None
	SylkUserStatuses_ACTIVE SylkUserStatuses = 1
	// [sylk.SylkUser.v1.SylkUserStatuses] - None
	SylkUserStatuses_INACTIVE SylkUserStatuses = 2
	// [sylk.SylkUser.v1.SylkUserStatuses] - None
	SylkUserStatuses_PENDING SylkUserStatuses = 3
)

// Enum value maps for SylkUserStatuses.
var (
	SylkUserStatuses_name = map[int32]string{
		0: "DEFAULT_SYLKUSERSTATUSES",
		1: "ACTIVE",
		2: "INACTIVE",
		3: "PENDING",
	}
	SylkUserStatuses_value = map[string]int32{
		"DEFAULT_SYLKUSERSTATUSES": 0,
		"ACTIVE":                   1,
		"INACTIVE":                 2,
		"PENDING":                  3,
	}
)

func (x SylkUserStatuses) Enum() *SylkUserStatuses {
	p := new(SylkUserStatuses)
	*p = x
	return p
}

func (x SylkUserStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SylkUserStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_sylk_SylkUser_v1_SylkUser_proto_enumTypes[0].Descriptor()
}

func (SylkUserStatuses) Type() protoreflect.EnumType {
	return &file_sylk_SylkUser_v1_SylkUser_proto_enumTypes[0]
}

func (x SylkUserStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SylkUserStatuses.Descriptor instead.
func (SylkUserStatuses) EnumDescriptor() ([]byte, []int) {
	return file_sylk_SylkUser_v1_SylkUser_proto_rawDescGZIP(), []int{0}
}

// [sylk.SylkUser.v1.SylkUserRoles] - None
type SylkUserRoles int32

const (
	// [sylk.SylkUser.v1.SylkUserRoles] - Default enum value for "sylk.SylkUser.v1.SylkUserRoles"
	SylkUserRoles_DEFAULT_SYLKUSERROLES SylkUserRoles = 0
	// [sylk.SylkUser.v1.SylkUserRoles] - None
	SylkUserRoles_ADMIN SylkUserRoles = 1
	// [sylk.SylkUser.v1.SylkUserRoles] - None
	SylkUserRoles_CONTRIBUTER SylkUserRoles = 2
	// [sylk.SylkUser.v1.SylkUserRoles] - None
	SylkUserRoles_READER SylkUserRoles = 3
)

// Enum value maps for SylkUserRoles.
var (
	SylkUserRoles_name = map[int32]string{
		0: "DEFAULT_SYLKUSERROLES",
		1: "ADMIN",
		2: "CONTRIBUTER",
		3: "READER",
	}
	SylkUserRoles_value = map[string]int32{
		"DEFAULT_SYLKUSERROLES": 0,
		"ADMIN":                 1,
		"CONTRIBUTER":           2,
		"READER":                3,
	}
)

func (x SylkUserRoles) Enum() *SylkUserRoles {
	p := new(SylkUserRoles)
	*p = x
	return p
}

func (x SylkUserRoles) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SylkUserRoles) Descriptor() protoreflect.EnumDescriptor {
	return file_sylk_SylkUser_v1_SylkUser_proto_enumTypes[1].Descriptor()
}

func (SylkUserRoles) Type() protoreflect.EnumType {
	return &file_sylk_SylkUser_v1_SylkUser_proto_enumTypes[1]
}

func (x SylkUserRoles) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SylkUserRoles.Descriptor instead.
func (SylkUserRoles) EnumDescriptor() ([]byte, []int) {
	return file_sylk_SylkUser_v1_SylkUser_proto_rawDescGZIP(), []int{1}
}

// [sylk.SylkUser.v1.PersonalAccessToken] - None
type PersonalAccessToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	OrgId       string                 `protobuf:"bytes,6,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Description string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	ExpiresAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Revoked     bool                   `protobuf:"varint,4,opt,name=revoked,proto3" json:"revoked,omitempty"`
	UserId      string                 `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *PersonalAccessToken) Reset() {
	*x = PersonalAccessToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sylk_SylkUser_v1_SylkUser_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonalAccessToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonalAccessToken) ProtoMessage() {}

func (x *PersonalAccessToken) ProtoReflect() protoreflect.Message {
	mi := &file_sylk_SylkUser_v1_SylkUser_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonalAccessToken.ProtoReflect.Descriptor instead.
func (*PersonalAccessToken) Descriptor() ([]byte, []int) {
	return file_sylk_SylkUser_v1_SylkUser_proto_rawDescGZIP(), []int{0}
}

func (x *PersonalAccessToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PersonalAccessToken) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *PersonalAccessToken) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PersonalAccessToken) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *PersonalAccessToken) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PersonalAccessToken) GetRevoked() bool {
	if x != nil {
		return x.Revoked
	}
	return false
}

func (x *PersonalAccessToken) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// [sylk.SylkUser.v1.SylkUserDisplay] - None
type SylkUserDisplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User       *SylkUser              `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	LastActive *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_active,json=lastActive,proto3" json:"last_active,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *SylkUserDisplay) Reset() {
	*x = SylkUserDisplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sylk_SylkUser_v1_SylkUser_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SylkUserDisplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SylkUserDisplay) ProtoMessage() {}

func (x *SylkUserDisplay) ProtoReflect() protoreflect.Message {
	mi := &file_sylk_SylkUser_v1_SylkUser_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SylkUserDisplay.ProtoReflect.Descriptor instead.
func (*SylkUserDisplay) Descriptor() ([]byte, []int) {
	return file_sylk_SylkUser_v1_SylkUser_proto_rawDescGZIP(), []int{1}
}

func (x *SylkUserDisplay) GetUser() *SylkUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SylkUserDisplay) GetLastActive() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActive
	}
	return nil
}

func (x *SylkUserDisplay) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SylkUserDisplay) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// [sylk.SylkUser.v1.SylkUser] - None
type SylkUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email         string                   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	OrgsIds       map[string]SylkUserRoles `protobuf:"bytes,11,rep,name=orgs_ids,json=orgsIds,proto3" json:"orgs_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=sylk.SylkUser.v1.SylkUserRoles"`
	Locale        string                   `protobuf:"bytes,6,opt,name=locale,proto3" json:"locale,omitempty"`
	GivenName     string                   `protobuf:"bytes,5,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	Nickname      string                   `protobuf:"bytes,7,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Status        SylkUserStatuses         `protobuf:"varint,10,opt,name=status,proto3,enum=sylk.SylkUser.v1.SylkUserStatuses" json:"status,omitempty"`
	Picture       string                   `protobuf:"bytes,8,opt,name=picture,proto3" json:"picture,omitempty"`
	Connection    string                   `protobuf:"bytes,9,opt,name=connection,proto3" json:"connection,omitempty"`
	UserId        string                   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EmailVerified bool                     `protobuf:"varint,3,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	FamilyName    string                   `protobuf:"bytes,4,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
}

func (x *SylkUser) Reset() {
	*x = SylkUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sylk_SylkUser_v1_SylkUser_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SylkUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SylkUser) ProtoMessage() {}

func (x *SylkUser) ProtoReflect() protoreflect.Message {
	mi := &file_sylk_SylkUser_v1_SylkUser_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SylkUser.ProtoReflect.Descriptor instead.
func (*SylkUser) Descriptor() ([]byte, []int) {
	return file_sylk_SylkUser_v1_SylkUser_proto_rawDescGZIP(), []int{2}
}

func (x *SylkUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SylkUser) GetOrgsIds() map[string]SylkUserRoles {
	if x != nil {
		return x.OrgsIds
	}
	return nil
}

func (x *SylkUser) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *SylkUser) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *SylkUser) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SylkUser) GetStatus() SylkUserStatuses {
	if x != nil {
		return x.Status
	}
	return SylkUserStatuses_DEFAULT_SYLKUSERSTATUSES
}

func (x *SylkUser) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *SylkUser) GetConnection() string {
	if x != nil {
		return x.Connection
	}
	return ""
}

func (x *SylkUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SylkUser) GetEmailVerified() bool {
	if x != nil {
		return x.EmailVerified
	}
	return false
}

func (x *SylkUser) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

var File_sylk_SylkUser_v1_SylkUser_proto protoreflect.FileDescriptor

var file_sylk_SylkUser_v1_SylkUser_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x79, 0x6c, 0x6b, 0x2f, 0x53, 0x79, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x53, 0x79, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x10, 0x73, 0x79, 0x6c, 0x6b, 0x2e, 0x53, 0x79, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x02, 0x0a, 0x13, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x0f, 0x53, 0x79, 0x6c, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x79, 0x6c, 0x6b, 0x2e, 0x53, 0x79,
	0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6c, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xeb, 0x03, 0x0a, 0x08,
	0x53, 0x79, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x42,
	0x0a, 0x08, 0x6f, 0x72, 0x67, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x79, 0x6c, 0x6b, 0x2e, 0x53, 0x79, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x67,
	0x73, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x73, 0x49,
	0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69,
	0x76, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x69, 0x76, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6b, 0x2e, 0x53, 0x79, 0x6c,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6c, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x5b, 0x0a, 0x0c,
	0x4f, 0x72, 0x67, 0x73, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x73, 0x79, 0x6c, 0x6b, 0x2e, 0x53, 0x79, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x57, 0x0a, 0x10, 0x53, 0x79, 0x6c,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x1c, 0x0a,
	0x18, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x53, 0x59, 0x4c, 0x4b, 0x55, 0x53, 0x45,
	0x52, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x45, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x03, 0x2a, 0x52, 0x0a, 0x0d, 0x53, 0x79, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x53,
	0x59, 0x4c, 0x4b, 0x55, 0x53, 0x45, 0x52, 0x52, 0x4f, 0x4c, 0x45, 0x53, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e,
	0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45,
	0x41, 0x44, 0x45, 0x52, 0x10, 0x03, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6c, 0x6b, 0x2d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f,
	0x73, 0x79, 0x6c, 0x6b, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x79, 0x6c, 0x6b, 0x2f, 0x53,
	0x79, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sylk_SylkUser_v1_SylkUser_proto_rawDescOnce sync.Once
	file_sylk_SylkUser_v1_SylkUser_proto_rawDescData = file_sylk_SylkUser_v1_SylkUser_proto_rawDesc
)

func file_sylk_SylkUser_v1_SylkUser_proto_rawDescGZIP() []byte {
	file_sylk_SylkUser_v1_SylkUser_proto_rawDescOnce.Do(func() {
		file_sylk_SylkUser_v1_SylkUser_proto_rawDescData = protoimpl.X.CompressGZIP(file_sylk_SylkUser_v1_SylkUser_proto_rawDescData)
	})
	return file_sylk_SylkUser_v1_SylkUser_proto_rawDescData
}

var file_sylk_SylkUser_v1_SylkUser_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sylk_SylkUser_v1_SylkUser_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sylk_SylkUser_v1_SylkUser_proto_goTypes = []interface{}{
	(SylkUserStatuses)(0),         // 0: sylk.SylkUser.v1.SylkUserStatuses
	(SylkUserRoles)(0),            // 1: sylk.SylkUser.v1.SylkUserRoles
	(*PersonalAccessToken)(nil),   // 2: sylk.SylkUser.v1.PersonalAccessToken
	(*SylkUserDisplay)(nil),       // 3: sylk.SylkUser.v1.SylkUserDisplay
	(*SylkUser)(nil),              // 4: sylk.SylkUser.v1.SylkUser
	nil,                           // 5: sylk.SylkUser.v1.SylkUser.OrgsIdsEntry
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_sylk_SylkUser_v1_SylkUser_proto_depIdxs = []int32{
	6, // 0: sylk.SylkUser.v1.PersonalAccessToken.expires_at:type_name -> google.protobuf.Timestamp
	6, // 1: sylk.SylkUser.v1.PersonalAccessToken.created_at:type_name -> google.protobuf.Timestamp
	4, // 2: sylk.SylkUser.v1.SylkUserDisplay.user:type_name -> sylk.SylkUser.v1.SylkUser
	6, // 3: sylk.SylkUser.v1.SylkUserDisplay.last_active:type_name -> google.protobuf.Timestamp
	6, // 4: sylk.SylkUser.v1.SylkUserDisplay.created_at:type_name -> google.protobuf.Timestamp
	6, // 5: sylk.SylkUser.v1.SylkUserDisplay.updated_at:type_name -> google.protobuf.Timestamp
	5, // 6: sylk.SylkUser.v1.SylkUser.orgs_ids:type_name -> sylk.SylkUser.v1.SylkUser.OrgsIdsEntry
	0, // 7: sylk.SylkUser.v1.SylkUser.status:type_name -> sylk.SylkUser.v1.SylkUserStatuses
	1, // 8: sylk.SylkUser.v1.SylkUser.OrgsIdsEntry.value:type_name -> sylk.SylkUser.v1.SylkUserRoles
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_sylk_SylkUser_v1_SylkUser_proto_init() }
func file_sylk_SylkUser_v1_SylkUser_proto_init() {
	if File_sylk_SylkUser_v1_SylkUser_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sylk_SylkUser_v1_SylkUser_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonalAccessToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sylk_SylkUser_v1_SylkUser_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SylkUserDisplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sylk_SylkUser_v1_SylkUser_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SylkUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sylk_SylkUser_v1_SylkUser_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sylk_SylkUser_v1_SylkUser_proto_goTypes,
		DependencyIndexes: file_sylk_SylkUser_v1_SylkUser_proto_depIdxs,
		EnumInfos:         file_sylk_SylkUser_v1_SylkUser_proto_enumTypes,
		MessageInfos:      file_sylk_SylkUser_v1_SylkUser_proto_msgTypes,
	}.Build()
	File_sylk_SylkUser_v1_SylkUser_proto = out.File
	file_sylk_SylkUser_v1_SylkUser_proto_rawDesc = nil
	file_sylk_SylkUser_v1_SylkUser_proto_goTypes = nil
	file_sylk_SylkUser_v1_SylkUser_proto_depIdxs = nil
}
